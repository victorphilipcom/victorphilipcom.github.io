<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Ranking Widget</title>
  <style>
    html, body {
      margin: 0;
      padding: 0;
      font-family: sans-serif;
    }

    #ticker-container {
      width: 100%;
      height: 40px;
      overflow: hidden;
      white-space: nowrap;
      border: 1px solid #ccc;
      position: relative;
    }

    #ticker-text {
      display: inline-block;
      padding-left: 100%;
      animation: scroll-left 120s linear infinite;
      font-size: 16px;
      line-height: 40px;
      transform: translateZ(0); /* This helps trigger proper rendering on some mobile devices */
      opacity: 1;
    }

    @keyframes scroll-left {
      0% { transform: translateX(100%); }
      100% { transform: translateX(-100%); }
    }

    .up { color: green; }
    .down { color: red; }

    img.logo {
      height: 20px;
      width: auto;
      vertical-align: middle;
      margin-right: 5px;
    }
  </style>
</head>
<body>
  <div id="ticker-container">
    <div id="ticker-text">Loading final holdings...</div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const tickerText = document.getElementById("ticker-text");

      // Fetch data and set up the ticker
      fetch("data.json")
        .then(resp => resp.json())
        .then(finalHoldings => {
          // Combine holdings into a single line of ticker content
          const tickerContent = finalHoldings.map(h => {
            const absRet = parseFloat(h.absReturn).toFixed(1);
            const pctRet = h.prevClose ? ((h.absReturn / h.prevClose) * 100).toFixed(1) : "0.0";
            const directionClass = h.absReturn > 0 ? "up" : h.absReturn < 0 ? "down" : "";
            const priceStr = parseFloat(h.price).toFixed(2);

            let logoHtml = "";
            if (h.logo) {
              logoHtml = `<img class="logo" src="${h.logo}" alt="${h.baseTicker}">`;
            }

            return `
              <span>
                ${logoHtml}
                ${h.baseTicker} $${priceStr} 
                <span class="${directionClass}">${absRet} (${pctRet}%)</span>
              </span>`;
          }).join(" | ");

          tickerText.innerHTML = tickerContent;
        })
        .catch(err => {
          console.error("Error loading final holdings:", err);
          tickerText.textContent = "Error loading final holdings.";
        });
    });
  </script>
</body>
</html>
